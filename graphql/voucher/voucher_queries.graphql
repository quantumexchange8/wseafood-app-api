# response interface
interface BaseResponse {
    success: Boolean!
    message: [String!]!
}

# Queries
extend type Query {
    vouchers: VouchersResponse @guard @field(resolver: "App\\GraphQL\\Queries\\VoucherQuery@getVouchers")
    voucher_detail(voucher_id: ID!): VoucherDetailResponse @guard @field(resolver: "App\\GraphQL\\Queries\\VoucherQuery@getVoucherDetail")

    # User vouchers (filter by status)
    user_vouchers(status: String!): UserVouchersResponse
    @guard
    @field(resolver: "App\\GraphQL\\Queries\\VoucherQuery@getUserVouchers")
}

# Entity types
type Voucher {
    id: ID!
    voucher_name: String
    description: String
    discount_rate: Float
    discount_type: String
    redeem_point: Float
    capped_amount: Float
    voucher_code: String
    voucher_media_url: String
    created_at: DateTime!
}

type UserVoucher {
    id: ID!
    voucher: Voucher @belongsTo
    redeemed_at: DateTime
    expired_at: DateTime
    used_at: DateTime
    status: String
}

# Response types implementing the interface
type VouchersResponse implements BaseResponse {
    success: Boolean!
    message: [String!]!
    data: [Voucher!]!
}

type VoucherDetailResponse implements BaseResponse {
    success: Boolean!
    message: [String!]!
    data: Voucher
}

type UserVouchersResponse implements BaseResponse {
    success: Boolean!
    message: [String!]!
    data: [UserVoucher!]!
}
